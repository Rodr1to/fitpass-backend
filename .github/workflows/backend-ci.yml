# .github/workflows/backend-ci.yml

name: Backend CI

on:
  # Run this workflow on pushes to the main and develop branches
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'apps/backend/**'
      - '.github/workflows/backend-ci.yml'
  # Also run on pull requests targeting main and develop
  pull_request:
    branches: [ "main", "develop" ]
    paths:
      - 'apps/backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    # Set the working directory for all subsequent steps to 'apps/backend'
    defaults:
      run:
        working-directory: ./apps/backend

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, sqlite, pdo_sqlite, bcmath, gd, zip, dom
        coverage: none

    - name: Cache Composer Dependencies
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/apps/backend/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Copy .env file for Testing
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer Dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Create SQLite Database
      run: touch database/database.sqlite

    - name: Run Migrations for Testing
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --seed

    - name: Execute Tests (PHPUnit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test